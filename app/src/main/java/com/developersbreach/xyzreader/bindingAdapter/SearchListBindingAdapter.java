package com.developersbreach.xyzreader.bindingAdapter;

import android.widget.TextView;

import androidx.databinding.BindingAdapter;
import androidx.navigation.NavDirections;
import androidx.navigation.Navigation;

import com.developersbreach.xyzreader.R;
import com.developersbreach.xyzreader.model.Article;
import com.developersbreach.xyzreader.view.detail.ArticleDetailFragment;
import com.developersbreach.xyzreader.view.search.SearchAdapter;
import com.developersbreach.xyzreader.view.search.SearchArticleFragment;
import com.developersbreach.xyzreader.view.search.SearchArticleFragmentDirections;


/**
 * BindingAdapter for fragment class {@link SearchArticleFragment}.
 * This values will be called as attributes in fragment layout {@link R.layout#item_search_article}.
 * Setters for binding from layout is set in adapter class {@link SearchAdapter}.
 */
public class SearchListBindingAdapter {

    /**
     * When value searchArticleToDetailClickListener is used as attribute on MaterialCardView, the
     * method bindSearchArticleToDetailClickListener is called. This navigates user to other fragment,
     * {@link SearchArticleFragment} to {@link ArticleDetailFragment} using a action declared in
     * {@link R.navigation#navigation_graph} assigned to {@link NavDirections} using
     * {@link Navigation} library.
     * <p>
     * {@link SearchArticleFragmentDirections#searchArticleToArticleDetailFragment(Article, String)}
     * which takes two args. First one contains data for selected data, while other argument takes
     * name of the fragment which is navigation from to destination. This is important to change
     * the behaviour of {@link ArticleDetailFragment} class.
     *
     * @param textView a view which we use to set click listener to perform this action.
     * @param article  contains data article which is passed as argument using SafeArgs.
     */
    @BindingAdapter("searchArticleToDetailClickListener")
    public static void bindSearchArticleToDetailClickListener(TextView textView, Article article) {
        textView.setOnClickListener(view -> {
            // Assign fragment class name as a string.
            final String className = SearchArticleFragment.class.getSimpleName();
            // Get directions to navigate to or from fragment using Actions which mapped in
            // NavGraph. This methods are auto-generated by NavigationComponent library only
            // after successful gradle build.
            // Since this actions takes article as argument, pass article with directions.
            NavDirections direction = SearchArticleFragmentDirections
                    .searchArticleToArticleDetailFragment(article, className);
            // Find NavController with view and navigate to destination using directions.
            Navigation.findNavController(view).navigate(direction);
        });
    }
}
